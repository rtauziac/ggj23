[gd_scene load_steps=16 format=2]

[ext_resource path="res://robot_character/robotwater.tres" type="Texture" id=1]
[ext_resource path="res://robot_character/bucketempty.tres" type="Texture" id=2]
[ext_resource path="res://robot_character/bucket/Bucket.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "waterLevel"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 9

[sub_resource type="VisualShaderNodeExpression" id=16]
size = Vector2( 391, 216 )
expression = "b = 0.42 + (0.222) * a;"

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 31

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;
uniform float waterLevel : hint_range(0, 1) = 1;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// ScalarUniform:5
	float n_out5p0 = waterLevel;

// ScalarFunc:9
	float n_out9p0 = 1.0 - n_out5p0;

// Expression:8
	float n_out8p0;
	n_out8p0 = 0.0;
	{
		n_out8p0 = 0.42 + (0.222) * n_out9p0;
	}

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out4p0.x;
	float n_out6p1 = n_out4p0.y;
	float n_out6p2 = n_out4p0.z;

// ScalarOp:7
	float n_out7p0 = step(n_out8p0, n_out6p1);

// ScalarOp:3
	float n_out3p0 = n_out2p1 * n_out7p0;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1241.75, 215.738 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -200, 120 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 120, 200 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -1100, 240 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( -1500, 380 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -940, 240 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( -120, 320 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( -760, 380 )
nodes/fragment/8/size = Vector2( 391, 216 )
nodes/fragment/8/input_ports = "0,0,a;"
nodes/fragment/8/output_ports = "0,0,b;"
nodes/fragment/8/expression = "b = 0.42 + (0.222) * a;"
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( -1140, 400 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 3, 0, 4, 0, 6, 0, 7, 0, 3, 1, 8, 0, 7, 0, 3, 0, 0, 1, 6, 1, 7, 1, 5, 0, 9, 0, 9, 0, 8, 0 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/waterLevel = 0.564

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

void fragment() {
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	COLOR.a = texture(TEXTURE, UV).a;
	
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 7 )

[node name="bucket_empty" type="Sprite"]
texture = ExtResource( 2 )
script = ExtResource( 3 )

[node name="BackBufferCopy" type="BackBufferCopy" parent="."]
copy_mode = 2
rect = Rect2( -200, -200, 400, 400 )

[node name="Node2D" type="Node2D" parent="BackBufferCopy"]
position = Vector2( 0, -118 )

[node name="Node2D" type="Node2D" parent="BackBufferCopy/Node2D"]

[node name="water" type="Sprite" parent="BackBufferCopy/Node2D/Node2D"]
material = SubResource( 9 )
position = Vector2( 0, 115 )
texture = ExtResource( 1 )

[node name="Position2D" type="Position2D" parent="BackBufferCopy/Node2D/Node2D"]
position = Vector2( 0, 176 )

[node name="waterMask" type="Sprite" parent="BackBufferCopy"]
visible = false
material = SubResource( 6 )
position = Vector2( 0, -3 )
texture = ExtResource( 1 )
